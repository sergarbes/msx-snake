100 ' INITIALIZATION
100 COLOR 15,1,1
110 DEFINT A-Z
120 SCREEN 2,0,0
121 X=64: Y=32
122 EP=3: EU=3: D=0
131 ' SNAKE (X,Y) MATRIX
131 DIM SX(3),SY(3)
132 FOR I=0 TO 2
133     SX(I)=X-(8*I)
134     SY(I)=Y
135 NEXT I
136 ' SNAKE ELEMENTS MATRIX
136 DIM SS(3)
137 SS(0)=0
138 SS(1)=1
139 SS(2)=2
140 GOSUB 10000

200 ' GAME LOOP

200 ' DRAW BLOCK
210 FOR I=0 TO EP-1
220    PUT SPRITE I,(SX(I),SY(I)-1),12,SS(I)
230 NEXT I

300 ' UPDATE BLOCK
300 ON STICK(0) GOTO 310,301,330,301,350,301,370,301
309 GOTO 440
310 IF D<>5 THEN D=1
313 GOTO 440
330 IF D<>7 THEN D=3
333 GOTO 440
350 IF D<>1 THEN D=5
353 GOTO 440
370 IF D<>3 AND D<>0 THEN D=7
373 GOTO 440

440 IF D=1 THEN GOSUB 3100
450 IF D=3 THEN GOSUB 3300
451 IF D=5 THEN GOSUB 3500
452 IF D=7 THEN GOSUB 3700

500 GOTO 200

600 ' PLAYER DIES
600 END
700 ' PLAYER WINS
700 END

1000 ' PATTERNS
1000 DATA 80,20,80,00,41,00,84,10
1010 DATA 00,7F,7F,7F,00,F7,F7,F7
1020 DATA FD,EE,DF,33,FD,EE,DF,33
1030 DATA 3C,7F,DB,FF,FF,DB,7E,3C
1031 ' -DESERT
1031 DATA 80,20,80,00,41,00,84,10
1032 ' -GRASS
1032 DATA 80,20,80,00,41,00,84,10
1040 DATA *
1100 ' COLORS
1100 DATA 6B,6B,6B,6B,6B,6B,6B,6B
1110 DATA E0,E0,E0,E0,E0,E0,E0,E0
1120 DATA 68,68,68,68,68,68,68,68
1130 DATA D0,D0,D0,D0,D0,D0,D0,D0
1131 ' -DESERT
1131 DATA 6B,6B,6B,6B,6B,6B,6B,6B
1132 ' -GRASS
1132 DATA 23,23,23,23,23,23,23,23
1140 DATA *
1200 ' NAMES
1200 DATA 5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
1210 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1220 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1230 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1280 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1300 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1310 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1320 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1330 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1340 DATA 5,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1350 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1360 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1370 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1380 DATA 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1390 DATA 5,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5
1510 DATA 5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
1520 DATA *

1600 ' SPRITES
1600 ' RIGHT DIRECTION - HEAD
1600 DATA E0,F8,EC,F8,F8,EC,F8,E0
1610 ' RIGHT DIRECTION - BODY
1610 DATA FF,FF,FF,FF,FF,FF,FF,FF
1620 ' RIGHT DIRECTION - TAIL
1620 DATA 03,0F,3F,FF,FF,3F,0F,03
1630 ' DOWN DIRECTION - HEAD
1630 DATA FF,FF,FF,5A,7E,24,00,00
1640 ' DOWN DIRECTION - BODY
1640 DATA FF,FF,FF,FF,FF,FF,FF,FF
1650 ' DOWN DIRECTION - TAIL
1650 DATA 18,18,3C,3C,7E,7E,FF,FF
1700 ' UP DIRECTION - HEAD
1700 DATA 00,00,24,7E,5A,FF,FF,FF
1710 ' BODY-UP DIRECTION
1710 DATA FF,FF,FF,FF,FF,FF,FF,FF
1720 ' TAIL-UP DIRECTION
1720 DATA FF,FF,7E,7E,3C,3C,18,18
1800 ' LEFT DIRECTION - HEAD
1800 DATA 07,1F,37,1F,1F,37,1F,07
1810 ' LEFT DIRECTION - BODY
1810 DATA FF,FF,FF,FF,FF,FF,FF,FF
1820 ' LEFT DIRECTION - TAIL
1820 DATA C0,F0,FC,FF,FF,FC,F0,C0
2000 DATA *

3100 ' MOVE UP
3100 ' COMING FROM THE RIGHT
3110 IF SS(0)=0 THEN SS(0)=6:SX(0)=SX(0):SY(0)=SY(0)-(8*1): EU=EP
3115 IF SS(1)=1 THEN SS(1)=7:SX(1)=SX(1)+(8*1)
3120 IF SS(2)=2 THEN IF EU=3 THEN SS(2)=2:SX(2)=SX(2)+(8*1):SY(2)=SY(2)
3125 IF SS(2)=2 THEN IF EU=2 THEN SS(2)=8:SX(2)=SX(2)+(8*1):SY(2)=SY(2)+(8*1)
3130 ' COMING FROM THE LEFT
3130 IF SS(0)=9 THEN SS(0)=6:SX(0)=SX(0):SY(0)=SY(0)-(8*1): EU=EP
3135 IF SS(1)=10 THEN SS(1)=7:SX(1)=SX(1)-(8*1)
3140 IF SS(2)=11 THEN IF EU=3 THEN SS(2)=11:SX(2)=SX(2)-(8*1):SY(2)=SY(2)
3145 IF SS(2)=11 THEN IF EU=2 THEN SS(2)=8:SX(2)=SX(2)-(8*1):SY(2)=SY(2)+(8*1)
3150 ' MOVEMENT
3150 SX(0)=SX(0):SY(0)=SY(0)-8
3155 SX(1)=SX(1):SY(1)=SY(1)-8
3160 SX(2)=SX(2):SY(2)=SY(2)-8
3165 IF EU>0 THEN EU=EU-1
3170 RETURN

3300 ' MOVE RIGHT
3300 ' COMING FROM ABOVE
3310 IF SS(0)=3 THEN SS(0)=0:SX(0)=SX(0)+(8*1):SY(0)=SY(0): EU=EP
3315 IF SS(1)=4 THEN SS(1)=1:SX(1)=SX(1):SY(1)=SY(1)+(8*1)
3320 IF SS(2)=5 THEN IF EU=3 THEN SS(2)=5:SX(2)=SX(2):SY(2)=SY(2)+(8*1)
3325 IF SS(2)=5 THEN IF EU=2 THEN SS(2)=2:SX(2)=SX(2)-(8*1):SY(2)=SY(2)+(8*1)
3330 ' COMING FROM BELOW
3330 IF SS(0)=6 THEN SS(0)=0:SX(0)=SX(0)+(8*1):SY(0)=SY(0): EU=EP
3335 IF SS(1)=7 THEN SS(1)=1:SX(1)=SX(1):SY(1)=SY(1)-(8*1)
3340 IF SS(2)=8 THEN IF EU=3 THEN SS(2)=8:SX(2)=SX(2):SY(2)=SY(2)-(8*1)
3345 IF SS(2)=8 THEN IF EU=2 THEN SS(2)=2:SX(2)=SX(2)-(8*1):SY(2)=SY(2)-(8*1)
3350 ' MOVEMENT
3350 SX(0)=SX(0)+8:SY(0)=SY(0)
3355 SX(1)=SX(1)+8:SY(1)=SY(1)
3360 SX(2)=SX(2)+8:SY(2)=SY(2)
3365 IF EU>0 THEN EU=EU-1
3370 RETURN

3500 ' MOVE DOWN
3500 ' COMING FROM THE RIGHT
3510 IF SS(0)=0 THEN SS(0)=3:SY(0)=SY(0)+(8*1): EU=EP
3515 IF SS(1)=1 THEN SS(1)=4:SX(1)=SX(1)+(8*1)
3520 IF SS(2)=2 THEN IF EU=3 THEN SS(2)=2:SX(2)=SX(2)+(8*1):SY(2)=SY(2)
3525 IF SS(2)=2 THEN IF EU=2 THEN SS(2)=5:SX(2)=SX(2)+(8*1):SY(2)=SY(2)-(8*1)
3530 ' COMING FROM THE LEFT
3530 IF SS(0)=9 THEN SS(0)=3:SY(0)=SY(0)+(8*1): EU=EP
3535 IF SS(1)=10 THEN SS(1)=4:SX(1)=SX(1)-(8*1)
3540 IF SS(2)=11 THEN IF EU=3 THEN SS(2)=11:SX(2)=SX(2)-(8*1):SY(2)=SY(2)
3545 IF SS(2)=11 THEN IF EU=2 THEN SS(2)=5:SX(2)=SX(2)-(8*1):SY(2)=SY(2)-(8*1)
3550 ' MOVEMENT
3550 SX(0)=SX(0):SY(0)=SY(0)+8
3555 SX(1)=SX(1):SY(1)=SY(1)+8
3560 SX(2)=SX(2):SY(2)=SY(2)+8
3565 IF EU>0 THEN EU=EU-1
3570 RETURN

3700 ' MOVE LEFT
3700 ' COMING FROM ABOVE
3710 IF SS(0)=3 THEN SS(0)=9:SX(0)=SX(0)-(8*1):SY(0)=SY(0): EU=EP
3715 IF SS(1)=4 THEN SS(1)=10:SX(1)=SX(1):SY(1)=SY(1)+(8*1)
3720 IF SS(2)=5 THEN IF EU=3 THEN SS(2)=5:SX(2)=SX(2):SY(2)=SY(2)+(8*1)
3725 IF SS(2)=5 THEN IF EU=2 THEN SS(2)=11:SX(2)=SX(2)+(8*1):SY(2)=SY(2)+(8*1)
3730 ' COMING FROM BELOW
3730 IF SS(0)=6 THEN SS(0)=9:SX(0)=SX(0)-(8*1):SY(0)=SY(0): EU=EP
3735 IF SS(1)=7 THEN SS(1)=10:SX(1)=SX(1):SY(1)=SY(1)-(8*1)
3740 IF SS(2)=8 THEN IF EU=3 THEN SS(2)=8:SX(2)=SX(2):SY(2)=SY(2)-(8*1)
3745 IF SS(2)=8 THEN IF EU=2 THEN SS(2)=11:SX(2)=SX(2)+(8*1):SY(2)=SY(2)-(8*1)
3750 ' MOVEMENT
3750 SX(0)=SX(0)-8:SY(0)=SY(0)
3755 SX(1)=SX(1)-8:SY(1)=SY(1)
3760 SX(2)=SX(2)-8:SY(2)=SY(2)
3765 IF EU>0 THEN EU=EU-1
3770 RETURN

10000 GOSUB 10100
10010 GOSUB 10200
10020 GOSUB 10300
10030 GOSUB 10400
10050 RETURN

10100 ' LOAD PATTERNS
10110 S=0
10120 READ R$
10130 IF R$="*" THEN RETURN ELSE R=VAL("&H"+R$)
10140 VPOKE S,R
10150 VPOKE 2048+S,R
10160 VPOKE 4096+S,R
10170 S=S+1:GOTO 10120

10200 ' LOAD COLORS
10210 S=0
10220 READ R$
10230 IF R$="*" THEN RETURN ELSE R=VAL("&H"+R$)
10240 VPOKE &H2000+S,R
10250 VPOKE &H2800+S,R
10260 VPOKE &H3000+S,R
10270 S=S+1:GOTO 10220

10300 ' LOAD NAMES
10310 S=&H1800
10320 READ R$
10330 IF R$="*" THEN RETURN
10340 VPOKE S,VAL("&H"+R$)
10350 S=S+1:GOTO 10320

10400 ' LOAD SPRITES
10410 S=&H3800
10420 READ R$
10430 IF R$="*" THEN RETURN ELSE VPOKE S,VAL("&H"+R$):S=S+1
10440 GOTO 10420
